{"ast":null,"code":"var _AppModule;\nimport { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/service-worker\";\nexport class AppModule {}\n_AppModule = AppModule;\n_AppModule.ɵfac = function AppModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AppModule)();\n};\n_AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _AppModule,\n  bootstrap: [AppComponent]\n});\n_AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: RouteReuseStrategy,\n    useClass: IonicRouteStrategy\n  }],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, i1.IonicModule, AppRoutingModule, i2.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["isDevMode","BrowserModule","RouteReuseStrategy","IonicModule","IonicRouteStrategy","AppComponent","AppRoutingModule","ServiceWorkerModule","AppModule","bootstrap","provide","useClass","imports","forRoot","register","enabled","registrationStrategy","declarations","i1","i2"],"sources":["/home/cc/Documents/8-ionic/Readr/src/app/app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, ServiceWorkerModule.register('ngsw-worker.js', {\n  enabled: !isDevMode(),\n  // Register the ServiceWorker as soon as the application is stable\n  // or after 30 seconds (whichever comes first).\n  registrationStrategy: 'registerWhenStable:30000'\n})],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"],"mappings":";AAAA,SAAmBA,SAAS,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,gBAAgB;AAEhE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,yBAAyB;;;;AAa7D,OAAM,MAAOC,SAAS;aAATA,SAAS;;mCAATA,UAAS;AAAA;;QAATA,UAAS;EAAAC,SAAA,GAFRJ,YAAY;AAAA;;aADb,CAAC;IAAEK,OAAO,EAAER,kBAAkB;IAAES,QAAQ,EAAEP;EAAkB,CAAE,CAAC;EAAAQ,OAAA,GANhEX,aAAa,EAAEE,WAAW,CAACU,OAAO,EAAE,EAAEP,gBAAgB,EAAEC,mBAAmB,CAACO,QAAQ,CAAC,gBAAgB,EAAE;IACjHC,OAAO,EAAE,CAACf,SAAS,EAAE;IACrB;IACA;IACAgB,oBAAoB,EAAE;GACvB,CAAC;AAAA;;2EAIWR,SAAS;IAAAS,YAAA,GAVLZ,YAAY;IAAAO,OAAA,GACjBX,aAAa,EAAAiB,EAAA,CAAAf,WAAA,EAAyBG,gBAAgB,EAAAa,EAAA,CAAAZ,mBAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}